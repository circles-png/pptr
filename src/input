def linear_search(array: list[int]):
    number = int(input("Enter a number: "))
    for item in array:
        if item == number:
            print("Found")
            return


def binary_search(sorted_array: list[int]):
    number = int(input("Enter a number: "))
    low, high = 0, len(sorted_array) - 1

    while low < high:
        mid = (low + high) // 2
        if number <= sorted_array[mid]:
            high = mid
        else:
            low = mid + 1

    if number == sorted_array[low]:
        print("Found")


def selection_sort(array: list[int]) -> list[int]:
    result: list[int] = []

    while len(array) > 0:
        minimum: None | tuple[int, int] = None
        for index, item in enumerate(array):
            if not minimum or item < minimum[1]:
                minimum = (index, item)
        assert minimum
        result.append(array.pop(minimum[0]))

    return result


def merge_sort(array: list[int]) -> list[int]:
    if len(array) <= 1:
        return array
    left, right = array[: len(array) // 2], array[len(array) // 2 :]
    left = merge_sort(left)
    right = merge_sort(right)
    merged: list[int] = []
    while len(left) > 0 and len(right) > 0:
        if left[0] <= right[0]:
            merged.append(left.pop(0))
        else:
            merged.append(right.pop(0))
    merged += left
    merged += right
    return merged


linear_search([1, 2, 3, 4, 5])
binary_search([1, 2, 3, 4, 5])
print(selection_sort([8, 5, 2, 7, 6, 1, 3, 4]))
print(merge_sort([8, 5, 2, 7, 6, 1, 3, 4]))
